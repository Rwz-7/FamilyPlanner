# Generated by Django 5.0.1 on 2025-05-06 07:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('planner', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CalDavSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('base_url', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=255)),
                ('family', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='caldav_settings', to='planner.family')),
            ],
            options={
                'verbose_name_plural': 'CalDAV Settings',
            },
        ),
        migrations.CreateModel(
            name='CalDavCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calendar_url', models.CharField(max_length=255)),
                ('display_name', models.CharField(max_length=100)),
                ('color', models.CharField(default='#3498db', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendars', to='external_services.caldavsettings')),
            ],
            options={
                'verbose_name_plural': 'CalDAV Calendars',
            },
        ),
        migrations.CreateModel(
            name='PhotoSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('source_type', models.CharField(choices=[('local', 'Local Directory'), ('google_photos', 'Google Photos'), ('nextcloud', 'Nextcloud')], max_length=20)),
                ('configuration', models.JSONField(default=dict, help_text='Configuration details in JSON format')),
                ('is_active', models.BooleanField(default=True)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_sources', to='planner.family')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WeatherSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('api_provider', models.CharField(choices=[('openweathermap', 'OpenWeatherMap'), ('weatherapi', 'WeatherAPI'), ('accuweather', 'AccuWeather')], default='openweathermap', max_length=50)),
                ('api_key', models.CharField(max_length=255)),
                ('default_location', models.CharField(default='Dornbirn', max_length=100)),
                ('units', models.CharField(choices=[('metric', 'Celsius'), ('imperial', 'Fahrenheit')], default='metric', max_length=10)),
                ('update_interval', models.IntegerField(default=30, help_text='Update interval in minutes')),
                ('family', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='weather_settings', to='planner.family')),
            ],
            options={
                'verbose_name_plural': 'Weather Settings',
            },
        ),
    ]
